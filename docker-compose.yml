networks:
  dts_network:
    driver: bridge

volumes:
  mysql_storage:
  postgres_storage:

x-logging: &logging
  driver: ${DOCKER_LOG_DRIVER:-json-file}
  options:
    max-size: ${DOCKER_LOG_MAX_SIZE:-100m}
    max-file: ${DOCKER_LOG_MAX_FILE:-1}

services:
  php:
    container_name: dts-php
    build:
      context: ./docker/php
    restart: unless-stopped
    tty: true
    depends_on:
      - mysql
    environment:
      - APP_DATABASE_TYPE
      - MYSQL_URL
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_USER_PASS
      - GITLAB_URL
      - GITLAB_TOKEN
      - GITLAB_GROUP_ID
      - GITLAB_SYNC_DATE_AFTER
      - GIT_LOG_EXCLUDE_PATH
    networks:
      dts_network:
        aliases:
          - dts_php
    volumes:
      - ./app:/var/www/app
      - ${GIT_PROJECTS_PATH}:/var/www/projects
    logging: *logging

  mysql:
    container_name: dts-mysql
    image: mysql:8.0.33
    restart: unless-stopped
    healthcheck:
      test: mysqladmin ping -h 0.0.0.0 -u root -p${MYSQL_ROOT_PASSWORD:-password} | grep -q 'mysqld is alive' || exit 1
      interval: 3s
      timeout: 3s
      retries: 10
    expose:
      - 3306
    ports:
      - ${MYSQL_PUB_PORT}:3306
    environment:
      - MYSQL_DATABASE
      - MYSQL_ROOT_HOST
      - MYSQL_ROOT_PASSWORD
    networks:
      dts_network:
        aliases:
          - dts_mysql
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/mysql.cnf:ro
      - mysql_storage:/var/lib/mysql
    logging: *logging
